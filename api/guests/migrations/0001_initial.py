# Generated by Django 5.0.6 on 2024-06-15 22:17

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAuth',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='user email')),
                ('phone_number', models.CharField(verbose_name='phone number')),
                ('username', models.CharField(max_length=50, verbose_name='user name')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='last name')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated date')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff user field')),
                ('is_active', models.BooleanField(default=True, verbose_name='active bool field')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='super user field')),
                ('type_user', models.CharField(choices=[('HL', 'Hotelier'), ('GS', 'Guest')], verbose_name='type of user, hotelier or guest')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user_auth',
            },
        ),
    ]
